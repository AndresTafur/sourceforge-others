#include <gtk/gtk.h>
#include <gdk/gdkx.h>

#include "Clock.hh"
#include "TrayPanel.hh"
#include "WindowList.hh"

#include "wxCircleToggleButton.hh"

#include "TaskBar.hh"


    TaskBar::TaskBar(wxString str, SystemUtils *sysUtils): wxFrame(NULL,wxID_ANY,wxT(""),wxPoint(0,sysUtils->screenHeight()-29),wxSize(sysUtils->screenWidth(),29),wxSTAY_ON_TOP|wxFRAME_NO_TASKBAR|wxBORDER_NONE, wxT(""))
     {

	wxBoxSizer *sizer;
	wxBitmap bmp( str + wxT("/data/pix/menu.png"),wxBITMAP_TYPE_ANY);
	wxBitmap bmp2( str + wxT("/data/pix/menuh.png"),wxBITMAP_TYPE_ANY);
	GtkWindow *wnd;
	int num;

		path   = str;
		sizer  = new wxBoxSizer(wxHORIZONTAL);
		btn    = new wxCircleToggleButton(this,wxID_OK,bmp,bmp2);

		frame  = new WhiteHawkMenuFrame(str,btn);
		line   = new wxStaticLine(this, wxID_ANY,wxDefaultPosition,wxDefaultSize,wxLI_VERTICAL,wxT(""));
		line2  = new wxStaticLine(this, wxID_ANY,wxDefaultPosition,wxDefaultSize,wxLI_VERTICAL,wxT(""));
		list   = new WindowList(this, wxID_ANY,sysUtils);
		deskbtn= new wxButton(this,DESKBTN,_T(""),wxDefaultPosition,wxDefaultSize,wxNO_BORDER,wxDefaultValidator,_T(""));
		date   = new Clock(this, wxID_ANY);
		tray   = new TrayPanel(this);

		menu  = new wxMenu;
		int desks = sysUtils->getDesktops();
		m_coordy  = sysUtils->screenHeight()-33;

        wnd = GTK_WINDOW(this->GetHandle());
		items = (wxMenuItem**) malloc( sizeof(wxMenuItem)*desks);

		for(int i=0; i < desks; i++)
		{
		  items[i] = new wxMenuItem(menu,i,(wxString("Desk ")) << (char)(49+i),wxT(""),wxITEM_RADIO);
		  menu->Append(items[i]);
		  Connect(i,wxEVT_COMMAND_MENU_SELECTED,wxCommandEventHandler(TaskBar::changeDesk));
		}

		deskbtn->SetLabel(  (wxString("")) << (char)(49+sysUtils->getCurrentDesk()) );
		deskbtn->SetBackgroundColour("LIGHT STEEL BLUE");
		deskbtn->SetSize(30,30);
		deskbtn->SetFont( wxFont(8,wxFONTFAMILY_DEFAULT,0,wxFONTWEIGHT_BOLD,false,"",wxFONTENCODING_DEFAULT));

		btn->SetToolTip("Haga click aqui para iniciar");
		deskbtn->SetToolTip("Cambia el escritorio actual");

		deskbtn->SetSize(20,25);


		sizer->Add(btn,0,wxFIXED_MINSIZE);
		sizer->Add(list,1,wxEXPAND|wxCENTER|wxTOP,0);
		sizer->Add(line,0,wxSHAPED|wxLEFT|wxRIGHT,1);
		sizer->Add(deskbtn,0,wxFIXED_MINSIZE|wxCENTER);
		sizer->Add(line2,0,wxSHAPED|wxLEFT|wxRIGHT,1);
		sizer->Add(tray,0,wxCENTER);
		sizer->Add(date,0,wxFIXED_MINSIZE|wxCENTER);

        gtk_window_set_keep_above(wnd,1);
        gtk_window_stick(wnd);


		this->sysUtils = sysUtils;
		this->SetSizer(sizer);
        this->Layout();

	}


	WindowList* TaskBar::getWndListPanel()
	{
            return list;
    }


	void TaskBar::ShowMenu( wxCommandEvent &evt)
	{
		  frame->runMenu(m_coordy);
	}



	void TaskBar::showDeskSelector(wxCommandEvent &evt)
	{
		deskbtn->PopupMenu(menu,0,0);
	}


	void TaskBar::changeDesk(wxCommandEvent &evt)
	{
	  int deskNum = evt.GetId();
	  wxString str("");
		str << deskNum+1;
				sysUtils->setCurrentDesktop(deskNum);
				deskbtn->SetLabel(str);
                list->removeAllWindows();
                list->upda;
	}


BEGIN_EVENT_TABLE(TaskBar,wxFrame)
EVT_BUTTON(wxID_OK,TaskBar::ShowMenu)
EVT_BUTTON(DESKBTN,TaskBar::showDeskSelector)
END_EVENT_TABLE()

