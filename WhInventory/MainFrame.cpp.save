#ifndef _MAIN_FRAME_
#define _MAIN_FRAME_

#include <wx/wx.h>

#include "MainDialog.hh"
#include "Facturer.hh"

enum
{

  ID_FILE_QUIT = 100,
  ID_FILE_PRINT_BC,
  ID_FILE_PRINT_FC,
  ID_TOOL_FACTURING,

  ID_TOOL_CFG_FACT,
  ID_TOOL_CFG_PROG,
  ID_TOOL_CFG_INV,

  ID_TOOL_INV_FAMILY,
  ID_TOOL_INV_ALL,

};



class MainFrame : public wxFrame
{
public:

        MainFrame() : wxFrame(NULL, wxID_ANY, wxT("WhiteHawkInventory"), wxDefaultPosition, wxDefaultSize, wxDEFAULT_FRAME_STYLE | wxVSCROLL | wxHSCROLL, wxT("frame"))
        {
            wxMenuBar  *bar  = new wxMenuBar;
            wxMenu     *progConf = new wxMenu;


            wxMenu *file   = new wxMenu;
            wxMenu *tools  = new wxMenu;
            wxMenu *help   = new wxMenu;
            wxMenu *invent = new wxMenu;


                file->Append(ID_FILE_PRINT_BC,wxT("Imprimir &Factura"), wxT("Imprime una Factura"), wxITEM_NORMAL);
                file->Append(ID_FILE_PRINT_FC,wxT("Imprimir &Codigo de barras"), wxT("Imprime un codigo de barras"), wxITEM_NORMAL);
                file->AppendSeparator();
                file->Append(ID_FILE_QUIT, wxT("&Salir"),wxT("Sale de la aplicacion actual"), wxITEM_NORMAL);

                tools->Append(wxID_ANY, wxT("&Inventario"),invent,wxT("Abre el inventario y busca elementos"));
                tools->Append(ID_TOOL_FACTURING, wxT("&Facturar"),wxT("Genera una factura"), wxITEM_NORMAL);
                tools->AppendSeparator();
                tools->Append(wxID_ANY,wxT("&Configuraciones"), progConf, wxT("A침ade Items, familias, codigos"));


                progConf->Append(ID_TOOL_CFG_FACT, wxT("Configuraci칩n de &factura"),   wxT("Modifica el modelo de factura"), wxITEM_NORMAL);
                progConf->Append(ID_TOOL_CFG_PROG, wxT("Configuraci칩n de p&rograma"),  wxT("Configura el programa"),    wxITEM_NORMAL);
                progConf->Append(ID_TOOL_CFG_INV,  wxT("Configuraci칩n de &inventario"),wxT("Modifica los items"),  wxITEM_NORMAL);


                invent->Append( ID_TOOL_INV_FAMILY, wxT("Ver por &Familia"), wxT("Muestra los items por familias"), wxITEM_NORMAL);
                invent->Append( ID_TOOL_INV_ALL, wxT("Ver &Todos"), wxT("Muestra todos los items"), wxITEM_NORMAL);

                bar->Append(file , wxT("&Archivo"));
                bar->Append(tools, wxT("&Herramientas"));
                bar->Append(help, wxT("Ay&uda"));


                this->SetMenuBar(bar);
                this->CreateStatusBar();
                this->Maximize(true);
                this->Layout();
        }

     void runMainDlg()
     {
        wxCommandEvent evt;

           MainDialog dlg(this);

                switch( dlg.ShowModal() )
                {
                    case 0:
                        this->facturer( evt );
                      break;

                    case 1:
                        this->inventory( evt );
                      break;

                    case 2:
                        this->buys( evt );
                      break;

                    default:

                        break;
                }
       }

       void facturer(wxCommandEvent &evt)
       {
         Facturer  *fact = new Facturer(this);

            fact->ShowModal();
       }

       void inventory(wxCommandEvent &evt)
       {

       }

       void buys(wxCommandEvent &evt)
       {

       }

protected:
DECLARE_EVENT_TABLE()

};

BEGIN_EVENT_TABLE()
    EVT_MENU(ID_TOOL_FACTURING,wxFrame:)
END_EVENT_TABLE()


#endif


